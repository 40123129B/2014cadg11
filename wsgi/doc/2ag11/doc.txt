cd2ag11報告(2ag11)
====

以下為各週報告

第十一組組員(2ag11)
------------------

小組網站:http://40123121-cadp13ag1.rhcloud.com/

40123121-李啟揚

40123129-高永城

40123133-梁智皓

解說部份的圖詳見小組網站

W8
------------------

1.(第一題)
 

程式碼:
 
for i in range(1,10):
   for j in range(1,10):
      print('%2.d*%2.d=%2.d'%(i,j,i*j),end=" ")
   print('')
 
解題過程:首先建立i從1到10的for迴圈與j從1到10的for迴圈，在print相應的數字。
 
心得:在考試中發現有很多不太了解的地方，
第一個不了解的就是該如何完成題目要要
求，經過很長時間的思考仍然有困難，請益了很多相關網站終於有一點發現，不過還是不足以完成題目要求的內容，礙於時間上的關係只能交出小小的成果
 
 
1.(第三題)
 
程式碼:
 
import hashlib
import string
import random
 
''' sha1 secure hashes '''
 
# convert user_password into sha1 encoded string
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
 
# generate random user password
def user_password(size=6, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))

def gen_users_auth_php(stud_list_filename, outputdir, sep):
    # read lines from file
    #lines = open("2b_stud_list.txt", "r", encoding="utf-8").read().splitlines()
    lines = open(stud_list_filename, "r", encoding="utf-8").read().splitlines()
    # we may also need to notice every user with computer generated passwords
    file_header = '''
# users.auth.php
# <?php exit()?>
# Don't modify the lines above
#
# Userfile
#
# Format:
#
# login:passwordhash:Real Name:email:groups,comma,seperated
# smd5 admin:$1$BtiJLaL9$q3Zy/VE8X5VrEMsR.XWdj1:admin:admin@gmail.com:admin,user

admin:$1$BtiJLaL9$q3Zy/VE8X5VrEMsR.XWdj1:admin:admin@gmail.com:admin,user
'''
    outputfile = open(outputdir+"/users.auth.php", "w", encoding="utf-8")
    outputfile.write(file_header)
    for i in range(len(lines)):
       # password = user_password(8, "ABCDEFGHJKMNPQRSTUVWXYZ23456789")
        password = lines[i].split("\t")[1]
        user_account = lines[i].split("\t")[0]
        computer_generated_password = password
        sha1_password = gen_password(password)
        real_name = lines[i].split("\t")[0]+"@gm.nfu.edu.tw"
        email = lines[i].split("\t")[0]+"@gm.nfu.edu.tw"
        groups = "user"
        accou = user_account.lower()
        print(accou)
    
    
        print(lines[i].split("\t")[0], "-", password, "-", gen_password(password), \
                "-", lines[i].split("\t")[1])
                

        print(password)
        line_to_write = accou+sep+sha1_password+sep+real_name+sep+email+sep+groups+"\n"
        outputfile.write(line_to_write)
    outputfile.close()

# call gen_users_auth_php() to generate users_auth.php file
gen_users_auth_php("abc.txt", "./", sep=":")
print("done")
 
說明過程:由程式藉由文字文件(.txt)的帳號與密碼，產生users.auth.php後，由FZ傳至/var/lib/openshift/534c9adee0b8cdb4e600017b/app-root/data/conf並且取代原來的users.auth.php即成功，要注意產生後admin的權限問題，並且要及時更改密碼，才能確保安全問題。

W9
------------------

第二題: 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同 的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表. 

 網站 : http://test-cadp13ag1.rhcloud.com/example/(後來因openshift不夠用已刪除此網)
 
 在 OPENSHIFT 創立新網頁並 CLONE 下來 之後在把載好的 CM 網站覆蓋進去 並把 WSGI 資料夾裡面的 application 替換成自己做的 
 
 第三題: 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.

網站 :http://40123121wiki-cadp13ag1.rhcloud.com/doku.php?id=start

 

先用 excel產生文件檔

再將python程式碼完成

配合文件檔來產生 users.auth.php檔案

使用鑰匙搭配 FileZilla 軟體將產生的 users.auth.php上傳至app-root/data/conf下

之後就能用產生的 帳號密碼登入自己前創wiki網站

W13
------------------

任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

首先載入身體

再載入左右手給定限制條件並組裝

依此再給它裝手掌

再來是裝腰部和雙腳

最後補個頭和帽子給它及組裝完成

組裝詳細過程

40123121:https://vimeo.com/95875254

40123129:https://vimeo.com/95875255

40123133:https://vimeo.com/95866667


W14
------------------

用W13的經驗可以快速上手

先載入beam_angle.prt

接下來都用限制條件方式組裝

依序用axle_10.prt裝入beam_angle.prt較長那頭

crossblock_2.prt裝在axle_10.prt兩邊並與beam_angle.prt面接觸

axle_5.prt裝在beam_angle.prt另一頭

crossblock_2.prt裝在axle_5.prt兩邊各2個

conn_3.prt裝在beam_angle.prt較長那邊的crossblock_2.prt

最後裝入beam_3.prt固定

組裝詳細過程

40123121:https://vimeo.com/96595415

40123129:https://vimeo.com/96583000

40123133:

W15
------------------

第十五週任務
請下載 lego_parts.7z orlego_parts.7z, 解開壓縮檔案後, 將資料放入 V:\home\lego 目錄中.

W15 任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

W15 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

W15 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

首先載入主體beam_7.prt

再用限制條件在上面的孔放入axle_3.prt

之後再導入兩個axle_extender.prt放到左右兩邊

一樣繼續在左右兩邊導入axle_red.prt並加入限制條件

conn_axle_female.prt也導入兩個放置在左右兩邊

在其中一邊放入beam_angle_4x2.prt

最後再補上conn.prt到beam_angle_4x2.prt上面的孔

自動組立依然在研究中...

組裝詳細過程

40123121:https://vimeo.com/97187351

40123129:https://vimeo.com/97187125

40123133:https://vimeo.com/97188023


W16~W18
------------------

小組PDF:https://copy.com/pKiiVXBKFJuX

期末報告:https://40123121-cadp13ag1.rhcloud.com/get_page?heading=%E6%9C%9F%E6%9C%AB%E5%A0%B1%E5%91%8A

2014cda result(PDF)：https://copy.com/Ua04dd62iCkw (2014/06/23 11:23 pm 版本)

2014cda result(html)：https://copy.com/63xlVgxCiHJh (2014/06/23 11:23 pm 版本)

第十一組 Github 倉儲:https://github.com/2014cdag11/2014cadg11

教材三:https://copy.com/FSOXw6QoMNmt

第十六, 十七與十八週的任務 (佔期末成績 45 分), 在讓各組根據教材三的架構做為導引, 建立一個類似 Teamproject 的雲端軟體套件.

其中要點包含:

協同產品設計為同步協同或非同步協同 套件的架構為何(流程圖), 希望引入哪些技術(本課程教導了哪些協同技術?), 解決哪些問題, 提升哪些效能? 完成後援此教材三的格式, 編寫一份套件簡介的報告(至多 5 頁) 所完成的內容, 必須同步放入各組雲端網站, Github 協同專案, 以及各組的協同報告中. 各組完成專案後, 必須按照時間在各週內進行組員自我評分(由各組組員自行評分), 以及各組自我評分(必須找其他三組進行交叉評分). 目前已經具備的技術:

在近端利用 Creo 繪製零件 利用遠端 Pro/Web.Link 程式修改近端 Creo 零件尺寸 將近端零件轉為 STL, 上傳至遠端 CMSimply 網站中檢視 在近端利用手動組立零件 在近端利用遠端網站上的 Pro/Web.Link 進行自動組立 在近端與雲端建立 Dokuwiki 網站 利用手動或半自動方式管理 Dokuwiki 的使用者 在近端與雲端建立 CMSimply 網站 利用 Github 與 Bitbucket 管理所有文字資料的版次 利用近端 Leo Editor 與可攜程式系統管理所有資料 利用近端環境產生 pdf 與 html 格式報告資料

雲端正齒輪減速機協同設計

所需技術:

Creo 參數式正齒輪零組件 (正齒輪, 傳動軸, 軸承, 叉銷, 齒輪箱) Creo 齒輪箱自動零件組立程式 (Pro/Web.Link) 雲端減速機齒輪面寬設計程式 CherryPy 雲端程式 Python 3 資料庫查詢程式 (透過 Pybean) 齒面寬設計運算程式 (程式查表與內差計算) 操作流程:

使用者準備好近端的 Creo 2.0 Pro/Web.Link 執行環境 使用者以嵌入式瀏覽器連結至雲端正齒輪減速機協同設計頁面 使用者根據所需的減速機設計需求選擇設計表單 雲端程式根據使用者的選擇參數進行設計運算 使用者根據設計運算結果, 準備好近端的設計零件 使用者根據設計結果所提供的零件自動組立連結, 在近端完成所需的正齒輪減速機零件變更與自動組立
